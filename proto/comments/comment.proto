syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

package comments.v1;
option go_package = "./comments;comments";

service CommentService {
    rpc CreateComment(CreateCommentRequest) returns (CommentResponse);
    rpc DeleteComment(DeleteCommentRequest) returns (DeleteCommentResponse);
    rpc AccountDeletionHandle(google.protobuf.Empty) returns (google.protobuf.Empty);
    rpc GetAllCommentsByPostId(GetAllCommentsByPostIdRequest) returns (GetBatchCommentsResponse);
    rpc GetAllCommentsByUserId(GetAllCommentsByUserIdRequest) returns (GetBatchCommentsResponse);
    rpc CountCommentsByPostId(CountCommentsByPostIdRequest) returns (GetCommentsCountResponse);
    rpc GetCommentsCountByPostIds(GetCommentsCountByPostIdsRequest) returns (GetCommentsCountByPostIdsResponse);
}

// requests
message CreateCommentRequest {
    int32 post_id = 1;
    string content = 2;
}

message DeleteCommentRequest {
    int32 comment_id = 1;
}

message GetAllCommentsByPostIdRequest {
    int32 post_id = 1;
}

message GetAllCommentsByUserIdRequest {
    int32 user_id = 1;
}

message CountCommentsByPostIdRequest {
    int32 post_id = 1;
}

message GetCommentsCountByPostIdsRequest {
    repeated int32 post_ids = 1;
}

// responses
message CommentResponse {
    int32 id = 1;
    string content = 2;
    int32 user_id = 3;
    int32 post_id = 4;
    google.protobuf.Timestamp created_at = 5;  
}

message DeleteCommentResponse {
    int32 post_id = 1;
}

message GetBatchCommentsResponse {
    repeated CommentResponse comments = 1;
    bool has_more = 2;
}

message GetCommentsCountResponse {
    int32 comments_count = 1;
}

message GetCommentsCountByPostIdsResponse {
    map<int32, int32> post_comments_count = 1; 
}