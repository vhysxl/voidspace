// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: comments/comment.proto

package comments

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// requests
type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostID        int32                  `protobuf:"varint,1,opt,name=postID,proto3" json:"postID,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_comments_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comments_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCommentRequest) GetPostID() int32 {
	if x != nil {
		return x.PostID
	}
	return 0
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     int32                  `protobuf:"varint,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_comments_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_comments_comment_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteCommentRequest) GetCommentId() int32 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type GetAllCommentsByPostIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        int32                  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllCommentsByPostIDRequest) Reset() {
	*x = GetAllCommentsByPostIDRequest{}
	mi := &file_comments_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllCommentsByPostIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCommentsByPostIDRequest) ProtoMessage() {}

func (x *GetAllCommentsByPostIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCommentsByPostIDRequest.ProtoReflect.Descriptor instead.
func (*GetAllCommentsByPostIDRequest) Descriptor() ([]byte, []int) {
	return file_comments_comment_proto_rawDescGZIP(), []int{2}
}

func (x *GetAllCommentsByPostIDRequest) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type GetAllCommentsByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAllCommentsByUserIDRequest) Reset() {
	*x = GetAllCommentsByUserIDRequest{}
	mi := &file_comments_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAllCommentsByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCommentsByUserIDRequest) ProtoMessage() {}

func (x *GetAllCommentsByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCommentsByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetAllCommentsByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_comments_comment_proto_rawDescGZIP(), []int{3}
}

func (x *GetAllCommentsByUserIDRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

// response
type CommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	UserId        int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	PostId        int32                  `protobuf:"varint,4,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentResponse) Reset() {
	*x = CommentResponse{}
	mi := &file_comments_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentResponse) ProtoMessage() {}

func (x *CommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentResponse.ProtoReflect.Descriptor instead.
func (*CommentResponse) Descriptor() ([]byte, []int) {
	return file_comments_comment_proto_rawDescGZIP(), []int{4}
}

func (x *CommentResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentResponse) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentResponse) GetPostId() int32 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *CommentResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetBatchCommentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*CommentResponse     `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	HasMore       bool                   `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetBatchCommentsResponse) Reset() {
	*x = GetBatchCommentsResponse{}
	mi := &file_comments_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetBatchCommentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBatchCommentsResponse) ProtoMessage() {}

func (x *GetBatchCommentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBatchCommentsResponse.ProtoReflect.Descriptor instead.
func (*GetBatchCommentsResponse) Descriptor() ([]byte, []int) {
	return file_comments_comment_proto_rawDescGZIP(), []int{5}
}

func (x *GetBatchCommentsResponse) GetComments() []*CommentResponse {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *GetBatchCommentsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

var File_comments_comment_proto protoreflect.FileDescriptor

const file_comments_comment_proto_rawDesc = "" +
	"\n" +
	"\x16comments/comment.proto\x12\vcomments.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"H\n" +
	"\x14CreateCommentRequest\x12\x16\n" +
	"\x06postID\x18\x01 \x01(\x05R\x06postID\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"5\n" +
	"\x14DeleteCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\x05R\tcommentId\"8\n" +
	"\x1dGetAllCommentsByPostIDRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\x05R\x06postId\"8\n" +
	"\x1dGetAllCommentsByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"\xa8\x01\n" +
	"\x0fCommentResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x05R\x06userId\x12\x17\n" +
	"\apost_id\x18\x04 \x01(\x05R\x06postId\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"o\n" +
	"\x18GetBatchCommentsResponse\x128\n" +
	"\bcomments\x18\x01 \x03(\v2\x1c.comments.v1.CommentResponseR\bcomments\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore2\x88\x03\n" +
	"\x0eCommentService\x12P\n" +
	"\rCreateComment\x12!.comments.v1.CreateCommentRequest\x1a\x1c.comments.v1.CommentResponse\x12J\n" +
	"\rDeleteComment\x12!.comments.v1.DeleteCommentRequest\x1a\x16.google.protobuf.Empty\x12k\n" +
	"\x16GetAllCommentsByPostID\x12*.comments.v1.GetAllCommentsByPostIDRequest\x1a%.comments.v1.GetBatchCommentsResponse\x12k\n" +
	"\x16GetAllCommentsByUserID\x12*.comments.v1.GetAllCommentsByUserIDRequest\x1a%.comments.v1.GetBatchCommentsResponseB\x15Z\x13./comments;commentsb\x06proto3"

var (
	file_comments_comment_proto_rawDescOnce sync.Once
	file_comments_comment_proto_rawDescData []byte
)

func file_comments_comment_proto_rawDescGZIP() []byte {
	file_comments_comment_proto_rawDescOnce.Do(func() {
		file_comments_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comments_comment_proto_rawDesc), len(file_comments_comment_proto_rawDesc)))
	})
	return file_comments_comment_proto_rawDescData
}

var file_comments_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_comments_comment_proto_goTypes = []any{
	(*CreateCommentRequest)(nil),          // 0: comments.v1.CreateCommentRequest
	(*DeleteCommentRequest)(nil),          // 1: comments.v1.DeleteCommentRequest
	(*GetAllCommentsByPostIDRequest)(nil), // 2: comments.v1.GetAllCommentsByPostIDRequest
	(*GetAllCommentsByUserIDRequest)(nil), // 3: comments.v1.GetAllCommentsByUserIDRequest
	(*CommentResponse)(nil),               // 4: comments.v1.CommentResponse
	(*GetBatchCommentsResponse)(nil),      // 5: comments.v1.GetBatchCommentsResponse
	(*timestamppb.Timestamp)(nil),         // 6: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                 // 7: google.protobuf.Empty
}
var file_comments_comment_proto_depIdxs = []int32{
	6, // 0: comments.v1.CommentResponse.created_at:type_name -> google.protobuf.Timestamp
	4, // 1: comments.v1.GetBatchCommentsResponse.comments:type_name -> comments.v1.CommentResponse
	0, // 2: comments.v1.CommentService.CreateComment:input_type -> comments.v1.CreateCommentRequest
	1, // 3: comments.v1.CommentService.DeleteComment:input_type -> comments.v1.DeleteCommentRequest
	2, // 4: comments.v1.CommentService.GetAllCommentsByPostID:input_type -> comments.v1.GetAllCommentsByPostIDRequest
	3, // 5: comments.v1.CommentService.GetAllCommentsByUserID:input_type -> comments.v1.GetAllCommentsByUserIDRequest
	4, // 6: comments.v1.CommentService.CreateComment:output_type -> comments.v1.CommentResponse
	7, // 7: comments.v1.CommentService.DeleteComment:output_type -> google.protobuf.Empty
	5, // 8: comments.v1.CommentService.GetAllCommentsByPostID:output_type -> comments.v1.GetBatchCommentsResponse
	5, // 9: comments.v1.CommentService.GetAllCommentsByUserID:output_type -> comments.v1.GetBatchCommentsResponse
	6, // [6:10] is the sub-list for method output_type
	2, // [2:6] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_comments_comment_proto_init() }
func file_comments_comment_proto_init() {
	if File_comments_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comments_comment_proto_rawDesc), len(file_comments_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comments_comment_proto_goTypes,
		DependencyIndexes: file_comments_comment_proto_depIdxs,
		MessageInfos:      file_comments_comment_proto_msgTypes,
	}.Build()
	File_comments_comment_proto = out.File
	file_comments_comment_proto_goTypes = nil
	file_comments_comment_proto_depIdxs = nil
}
